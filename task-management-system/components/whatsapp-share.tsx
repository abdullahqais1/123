"use client"

import { Button } from "@/components/ui/button"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Textarea } from "@/components/ui/textarea"
import { Share2, Copy, MessageCircle } from "lucide-react"
import { useState } from "react"

interface WhatsAppShareProps {
  reportData: {
    employeeName: string
    date: string
    completedTasks: number
    pendingTasks: number
    totalTasks: number
    tasks: Array<{
      customerName: string
      description: string
      status: string
      timestamp: string
    }>
  }
}

export function WhatsAppShare({ reportData }: WhatsAppShareProps) {
  const [copied, setCopied] = useState(false)

  const generateReportText = () => {
    const completedTasksList = reportData.tasks
      .filter((task) => task.status === "completed")
      .map((task, index) => `${index + 1}. ${task.customerName}: ${task.description}`)
      .join("\n")

    const pendingTasksList = reportData.tasks
      .filter((task) => task.status.includes("pending"))
      .map(
        (task, index) =>
          `${index + 1}. ${task.customerName}: ${task.description} (${task.status === "pending-short" ? "Short-term" : "Long-term"})`,
      )
      .join("\n")

    return `📊 *Daily Work Report*
👤 *Employee:* ${reportData.employeeName}
📅 *Date:* ${reportData.date}

📈 *Summary:*
✅ Completed Tasks: ${reportData.completedTasks}
⏳ Pending Tasks: ${reportData.pendingTasks}
📋 Total Tasks: ${reportData.totalTasks}

${completedTasksList ? `✅ *Completed Tasks:*\n${completedTasksList}\n\n` : ""}
${pendingTasksList ? `⏳ *Pending Tasks:*\n${pendingTasksList}\n\n` : ""}
---
Generated by Task Management System`
  }

  const copyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(generateReportText())
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    } catch (err) {
      console.error("Failed to copy text: ", err)
    }
  }

  const shareToWhatsApp = () => {
    const text = encodeURIComponent(generateReportText())
    const whatsappUrl = `https://wa.me/?text=${text}`
    window.open(whatsappUrl, "_blank")
  }

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button className="flex items-center gap-2 bg-green-600 hover:bg-green-700">
          <Share2 className="h-4 w-4" />
          Share Report
        </Button>
      </DialogTrigger>
      <DialogContent className="max-w-2xl">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <MessageCircle className="h-5 w-5 text-green-600" />
            Share Daily Report
          </DialogTitle>
          <DialogDescription>Copy the report text and share it via WhatsApp or any messaging app</DialogDescription>
        </DialogHeader>
        <div className="space-y-4">
          <div className="space-y-2">
            <label className="text-sm font-medium">Report Preview:</label>
            <Textarea value={generateReportText()} readOnly rows={15} className="font-mono text-sm resize-none" />
          </div>
          <div className="flex gap-3">
            <Button onClick={copyToClipboard} variant="outline" className="flex-1">
              <Copy className="h-4 w-4 mr-2" />
              {copied ? "Copied!" : "Copy Text"}
            </Button>
            <Button onClick={shareToWhatsApp} className="flex-1 bg-green-600 hover:bg-green-700">
              <MessageCircle className="h-4 w-4 mr-2" />
              Open WhatsApp
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}
